# assignment:
## Write a program to read through the mbox-short.txt and figure out the
## distribution by hour of the day for each of the messages. You can pull the
## hour out from the 'From ' line by finding the time and then splitting the string
## a second time using a colon.
#
## From stephen.marquard@uct.ac.za Sat Jan  5 09:14:16 2008
#
##Once you have accumulated the counts for each hour, print out the counts,
##sorted by hour as shown below.

# desired output:
# 04 3
# 06 1
# 07 1
# 09 2
# 10 3
# 11 6
# 14 1
# 15 2
# 16 4
# 17 2
# 18 1
# 19 1

# this needs to be done WITHOUT using regex

# given code for a quick way to enter the file name
name = input("Enter file:")
if len(name) < 1:
    name = "mbox-short.txt"
handle = open(name)

# my code
counts = dict()
for line in handle:
    line = line.rstrip() # strip whitespace
    if line.startswith('From '):
        words = line.split() # split line into words
        times = words[5] # grab the 6th word
        hours = times.split(':') # split the 6th word (hour mark) by colon
        if hours[0] in counts:
            counts[hours[0]] = counts.get(hours[0],0) + 1
        else:
            counts[hours[0]] = 1 # grab each hour mark and count them

my_sort = sorted([(k,v) for k,v in counts.items()]) # temporary tuple
for (k,v) in my_sort:
    print(k,v)
